apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: service1
  labels:
    version: "#{RELEASE_ARTIFACTS__SERVICE1_BUILDNUMBER}"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      namespace: #{Release.EnvironmentName}
      labels:
        app: service1
    spec:
      hostname: service1
      containers:
        - name: service1
          image: #{registryName}/service1:#{RELEASE_ARTIFACTS__SERVICE1_BUILDNUMBER}
          ports:
            - containerPort: 8001
      imagePullSecrets:
        - name: regsecret
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: service2
  labels:
    version: "#{RELEASE_ARTIFACTS__SERVICE2_BUILDNUMBER}"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      namespace: #{Release.EnvironmentName}
      labels:
        app: service2
    spec:
      hostname: service2
      containers:
        - name: service2
          image: #{registryName}/service2:#{RELEASE_ARTIFACTS__SERVICE2_BUILDNUMBER}
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: regsecret
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: gateway
  labels:
    version: "#{RELEASE_ARTIFACTS__GATEWAY_BUILDNUMBER}"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      namespace: #{Release.EnvironmentName}
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: #{registryName}/gateway:#{RELEASE_ARTIFACTS__GATEWAY_BUILDNUMBER}
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "#{dotnetenvironment}"
      imagePullSecrets:
        - name: regsecret
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: #{Release.EnvironmentName}
spec:
  type: LoadBalancer
  ports:
    - port: 80
  selector:
    app: gateway
---
apiVersion: v1
kind: Service
metadata:
  name: service2
  namespace: #{Release.EnvironmentName}
spec:
  ports:
    - protocol: TCP
      port: 80
  selector:
    app: service2

---
apiVersion: v1
kind: Service
metadata:
  name: service1
  namespace: #{Release.EnvironmentName}
spec:
  ports:
    - protocol: TCP
      port: 8001
  selector:
    app: service1
